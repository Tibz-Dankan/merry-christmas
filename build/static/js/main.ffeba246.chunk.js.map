{"version":3,"sources":["components/Header.js","components/Footer.js","components/Home.js","components/links/HomeLink.js","components/links/ViewPileLink.js","components/About.js","components/links/ViewLink.js","components/links/LoginLink.js","components/links/LogoutLink.js","components/NotLoggedIn.js","components/AddPile.js","components/SignUp.js","components/Login.js","components/Logout.js","components/links/AddPileLink.js","components/EditPileDescription.js","components/EditPileTitle.js","components/DeletePile.js","components/ViewMypile.js","components/ScrollToTop.js","components/AddSecretePile.js","components/ViewSecretePile.js","components/VerifyEmail.js","components/TestClient.js","components/NotFound.js","App.js","index.js"],"names":["Header","className","to","Footer","useToggle","initialState","useState","state","setState","toggle","useCallback","Home","showMenuBar","setShowMenuBar","onClick","size","HomeLink","ViewPileLink","About","ViewLink","LoginLink","LogoutLink","NotLoggedIn","notLoggedIn","setNotLoggedIn","history","useHistory","useEffect","localStorage","getItem","setTimeout","push","AddPile","title","description","pile","setPile","dateOfPileStorage","Date","displayWhenTokenError","displayWhenUserNotLoggedIn","setDisplayWhenUserNotLoggedIn","userName","setUserName","hidePileFormWhenAddedToDb","setHidePileFormWhenAddedToDb","displayPacmanLoader","setDisplayPacmanLoader","catchError","setCatchError","isLoggedIn","setIsLoggedIn","axiosApi","axios","create","baseURL","headers","Authorization","getUserProfile","e","a","get","response","console","log","data","submitPile","preventDefault","post","postPile","status","handlePileChanges","newpile","target","id","value","style","textAlign","color","firstname","lastname","onSubmit","htmlFor","type","onChange","placeholder","required","SignUp","email","gender","password","confirm_password","registerInfo","setRegisterInfo","successfullyRegisteredMsg","setSuccessfullyRegisteredMsg","displaySuccessfullyRegistered","setDisplaySuccessfullyRegistered","checkEmailStatusError","setCheckEmailStatusError","displayEmailOrPasswordError","setDisplayEmailOrPasswordError","checkPasswordMatch","setCheckPasswordMatch","hideRegistrationForm","setHideRegstrationForm","displayBeatLoader","setDisplayBeatLoader","isVerifiedEmail","submitRegisterInfo","window","scrollTo","is_verified_email","msgEmail","msgPassword","handleChange","newRegisterInfo","Login","userLoginInfo","setUserLoginInfo","displayLoginErrors","SetDisplayLoginErrors","displayLoginSuccess","SetDisplayLoginSuccess","hideLoginForm","setHideLoginForm","displayFadeLoader","setDisplayFadeLoader","submitLoginInfo","css","msg","success","setItem","accessToken","userId","handleLoginInfo","checkLoginInfo","Logout","logoutUser","removeItem","AddPileLink","EditPileDescription","pileDescription","setPileDescription","setDisplayClipLoader","isModalOpen","setIsOpenModal","closeModal","tokenFromLocalStorage","updatePileDescription","put","pile_id","Modal","setAppElement","document","getElementById","isOpen","onAfterOpen","onRequestClose","content","top","left","right","bottom","marginRight","transform","width","contentLabel","EditPileTitle","pileTitle","setPileTitle","updatePileTitle","DeletePile","getElementsByClassName","pileId","deletePile","delete","ViewMypile","renderAllPile","setRenderAllPile","displayWhenNoToken","setDisplayWhenNoToken","displayCatchError","setDisplayCatchError","displayPropagateLoader","setDisplayPropagateLoader","displayTable","setDisplayTable","getPile","getMyPile","arrayPile","rows","isActive","map","ScrollToTop","pathname","useLocation","AddSecretePile","secretePile","setSecretePile","secretePileInfo","submitSecretePileInfo","secrete_title","secrete_description","ViewSecretePile","getSecretePile","renderSecretePile","secrete_id","VerifyEmail","useParams","verificationCode","showFadeLoader","setShowFadeLoader","showSuccessVerificationMsg","setShowSuccessVerificationMsg","successMsg","setSuccessMsg","verifyCode","parseInt","verificationMsg","TestClient","allOptions","genderOption","setGenderOption","options","styles","backgroundColor","NotFound","App","path","component","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ffeba246.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./../App.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <header className=\"header-nav-links\">\r\n          <NavLink to=\"/addpile\" className=\"header-link\">\r\n            MyPile\r\n          </NavLink>\r\n          <NavLink to=\"/viewmypile\" className=\"header-link\">\r\n            ViewPile\r\n          </NavLink>\r\n          <NavLink to=\"/about\" className=\"header-link\">\r\n            About\r\n          </NavLink>\r\n          <NavLink to=\"/signup\" className=\"header-link\">\r\n            SignUp\r\n          </NavLink>\r\n          <NavLink to=\"/login\" className=\"header-link\">\r\n            Login\r\n          </NavLink>\r\n        </header>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./../App.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-wrapper\">\r\n      <p>This site was founded, is run and managed by Tibz Dankan </p>\r\n      {/* the founder section to be added here */}\r\n      <p>Founder</p>\r\n      {/* the contact feature to be added here */}\r\n      <p>Contact</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n// import HomeHeaderLogoutLink from \"./links/HomeHeaderLogoutLink\";\r\nimport \"./../css/Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, X } from \"react-bootstrap-icons\";\r\n\r\nconst Home = () => {\r\n  const [showMenuBar, setShowMenuBar] = useToggle();\r\n  return (\r\n    <div className=\"home-page-wrapper\">\r\n      <div className=\"home-header-wrapper\">\r\n        <div className=\"logo-wrapper\">CrytoPile</div>\r\n        <div className=\"desktop-home-header-links\">\r\n          <Header />\r\n        </div>\r\n        <div className=\"menu-icon-wrapper\" onClick={setShowMenuBar}>\r\n          {showMenuBar ? (\r\n            <div className=\"mobile-home-header-links\">\r\n              <X size={32} className=\"bootstrap-x-icon\" />\r\n              <div className=\"mobile-home-header-component\">\r\n                <Header />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"bootstrap-list-icon-wrapper\">\r\n              <List className=\"bootstrap-list-icon\" size={25} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"home-page-content\">\r\n        <div className=\"home-page-welcome-heading\">\r\n          <h2>Welcome To Cryptopile </h2>\r\n        </div>\r\n        <p>This is a place where everything you store with us is called pile</p>\r\n        <p>\r\n          <b>Pile</b> is common term used through the whole site.\r\n        </p>\r\n        <p>\r\n          So having a better understanding of pile is vital to effectively use\r\n          the stockpile.com\r\n        </p>\r\n        <p>\r\n          <b>stockpile</b> is something saved for future use or a special\r\n          purpose\r\n        </p>\r\n        <p>\r\n          Therefore we are refering <b>Pile</b> as some piece of information you\r\n          keep with stockpile.com for future use or special purpose\r\n        </p>\r\n        <p>\r\n          If this is your first time here{\" \"}\r\n          <Link to=\"/signup\" className=\"link\">\r\n            signup\r\n          </Link>{\" \"}\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          Already have an account{\" \"}\r\n          <Link to=\"/login\" className=\"link\">\r\n            login\r\n          </Link>\r\n        </p>\r\n      </div>\r\n      <div className=\"home-footer-wrapper\">\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// The function that takes the boolean parameter and returns its opposite value\r\nconst useToggle = (initialState = false) => {\r\n  const [state, setState] = useState(initialState);\r\n  const toggle = useCallback(() => setState((state) => !state), []);\r\n  return [state, toggle];\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./../../App.css\";\r\n\r\nconst HomeLink = () => {\r\n  // remember to delete the-home-link in the css file\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <NavLink to=\"/\" className=\"navigation-link\">\r\n          Home\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeLink;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./../../App.css\";\r\n\r\nconst ViewPileLink = () => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <NavLink to=\"/viewmypile\" className=\"navigation-link\">\r\n          ViewPile\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewPileLink;\r\n","import React from \"react\";\r\nimport HomeLink from \"./links/HomeLink\";\r\nimport ViewPileLink from \"./links/ViewPileLink\";\r\nimport \"./../css/About.css\";\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about-page-wrapper\">\r\n      <div className=\"about-header-wrapper\">\r\n        <div className=\"about-home-link header-link\">\r\n          <HomeLink />\r\n        </div>\r\n        <div className=\"about-viewpile-link header-link\">\r\n          <ViewPileLink />\r\n        </div>\r\n      </div>\r\n      <div className=\"about-page-content-wrapper\">\r\n        <h1>Content coming soon !</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ViewLink = () => {\r\n  return (\r\n    <div>\r\n      <Link to=\"viewmypile\" className=\"navigation-link\">\r\n        Checkout Pile\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewLink;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./../../App.css\";\r\n\r\nconst LoginLink = () => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <NavLink to=\"/login\" className=\"navigation-link\">\r\n          login\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginLink;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./../../App.css\";\r\n\r\nconst LogoutLink = () => {\r\n  return (\r\n    <div className=\"logout-header-link\">\r\n      <NavLink to=\"/Logout\" className=\"navigation-link\">\r\n        Logout\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoutLink;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./../css/NotLoggedIn.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst NotLoggedIn = () => {\r\n  const [notLoggedIn, setNotLoggedIn] = useState(false);\r\n  let history = useHistory();\r\n  const redirectToHomePage = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"isLoggedIn\") === null) {\r\n      setNotLoggedIn(true);\r\n      setTimeout(() => {\r\n        redirectToHomePage();\r\n      }, 2000);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"not-logged-in-wrapper\">\r\n      {notLoggedIn ? (\r\n        <div className=\"not-logged-in-message\">\r\n          <h1>Not Logged In !</h1>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotLoggedIn;\r\n","import React, { useState, Fragment, useContext, useEffect } from \"react\";\r\nimport HomeLink from \"./links/HomeLink\";\r\nimport ViewPileLink from \"./links/ViewPileLink\";\r\nimport ViewLink from \"./links/ViewLink\";\r\nimport LoginLink from \"./links/LoginLink\";\r\nimport LogoutLink from \"./links/LogoutLink\";\r\nimport axios from \"axios\";\r\nimport \"./../css/AddPile.css\";\r\nimport { PacmanLoader } from \"react-spinners\";\r\nimport NotLoggedIn from \"./NotLoggedIn\";\r\n// import { TokenContext } from \"./context/TokenContext\";\r\nconst AddPile = () => {\r\n  const [pile, setPile] = useState({ title: \"\", description: \"\" });\r\n  // const date = new Date();\r\n  const dateOfPileStorage = new Date();\r\n  // const dateOfPileStorage = date.toString();\r\n\r\n  const [displayWhenTokenError, setDisplayWhenTokenError] = useState(\"\");\r\n  const [displayWhenUserNotLoggedIn, setDisplayWhenUserNotLoggedIn] =\r\n    useState(false);\r\n  const [userName, setUserName] = useState({});\r\n  // Db represents database\r\n  const [hidePileFormWhenAddedToDb, setHidePileFormWhenAddedToDb] =\r\n    useState(false);\r\n  // display the beat loader\r\n  const [displayPacmanLoader, setDisplayPacmanLoader] = useState(false);\r\n  //catch some errors\r\n  const [catchError, setCatchError] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const axiosApi = axios.create({\r\n    // baseURL: \"https://stockpile-backend.herokuapp.com/api\",\r\n    baseURL: \"http://localhost:5000/api\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n    },\r\n  });\r\n  // get the user profile\r\n  const getUserProfile = async (e) => {\r\n    try {\r\n      const response = await axiosApi.get(\r\n        `/getusername/${localStorage.getItem(\"userId\")}`\r\n      );\r\n      console.log(response.data);\r\n      setUserName(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"isLoggedIn\") === \"isLoggedIn\") {\r\n      // Render the user profile on  mounting nd after every  update\r\n      getUserProfile();\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  // Post or submit the pile\r\n  const submitPile = async (e) => {\r\n    e.preventDefault();\r\n    // display  the beat loaders\r\n    setDisplayPacmanLoader(true);\r\n    setCatchError(\"\");\r\n    try {\r\n      // to be removed\r\n      console.log(dateOfPileStorage); // this line will be removed\r\n      const postPile = await axiosApi.post(\r\n        `/pile/${localStorage.getItem(\"userId\")}`,\r\n        {\r\n          title: pile.title,\r\n          description: pile.description,\r\n          // storageDate: dateOfPileStorage, // more research here\r\n        }\r\n      );\r\n      console.log(postPile);\r\n\r\n      if (postPile.status === 200) {\r\n        setDisplayPacmanLoader(false);\r\n        if (!localStorage.getItem(\"accessToken\")) {\r\n          setDisplayWhenUserNotLoggedIn(true);\r\n        }\r\n        // else if (postPile.data.Error.name === \"JsonWebTokenError\") {\r\n        //   // display msg jwt is tampered with\r\n        //   setDisplayWhenTokenError(postPile.data.Error.message);\r\n        else {\r\n          setPile({ title: \"\", description: \"\" });\r\n          setHidePileFormWhenAddedToDb(true);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      setCatchError(\"Sorry, something went wrong!\");\r\n      setDisplayPacmanLoader(false);\r\n    }\r\n  };\r\n\r\n  // Handle  the changes in the pile\r\n  const handlePileChanges = (e) => {\r\n    const newpile = { ...pile };\r\n    newpile[e.target.id] = e.target.value;\r\n    setPile(newpile);\r\n    console.log(newpile);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        {isLoggedIn ? (\r\n          <div className=\"mypile-wrapper\">\r\n            <div className=\"mypile-header-wrapper\">\r\n              <div className=\"mypile-home-link header-link\">\r\n                <HomeLink />\r\n              </div>\r\n              <div className=\"mypile-viewpile-link header-link\">\r\n                <ViewPileLink />\r\n              </div>\r\n              <div className=\"mypile-logout-link\">\r\n                <LogoutLink />\r\n              </div>\r\n            </div>\r\n            <div className=\"mypile-content-wrapper\">\r\n              <div\r\n                className=\"mypile-catch-error\"\r\n                style={{ textAlign: \"center\" }}\r\n              >\r\n                <p style={{ color: \"black\" }}>{catchError}</p>\r\n              </div>\r\n              {displayWhenUserNotLoggedIn ? (\r\n                <div className=\"display-when-not-logged-in\">\r\n                  <h3>{displayWhenTokenError}</h3>\r\n                  <p>{catchError}</p>\r\n                  <div>\r\n                    <LoginLink />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                /* display user profile */\r\n                <div className=\"user-profile\">\r\n                  <div className=\"user-profile-picture\">\r\n                    <h4>Your Profile pic</h4>\r\n                  </div>\r\n                  <div className=\"user-name\">\r\n                    <h3>\r\n                      {userName.firstname} {userName.lastname}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"beat-loader-component-mypile-wrapper\">\r\n                {displayPacmanLoader ? (\r\n                  <div className=\"beat-loader-component-mypile-inner\">\r\n                    <PacmanLoader color=\"lightseagreen\" />\r\n                    <h1>...</h1>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              {/* hide the pile form when the pile has been added to the database */}\r\n              {hidePileFormWhenAddedToDb ? (\r\n                <div className=\"pile-added-successfully\">\r\n                  <div className=\"pile-added\">\r\n                    <p> Your pile has been added sucessfully</p>\r\n                    <p> click to checkout pile to see the pile</p>\r\n                  </div>\r\n                  <div className=\"view-pile-link-in-mypile\">\r\n                    <ViewLink />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"pile-form\">\r\n                  {/* THE PILE FORM */}\r\n                  <form onSubmit={(e) => submitPile(e)}>\r\n                    <label htmlFor=\"Title\">Title:</label> <br />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={pile.title}\r\n                      onChange={(e) => handlePileChanges(e)}\r\n                      id=\"title\"\r\n                      placeholder=\"Title\"\r\n                      className=\" mypile-input-field pile-title-input-field\"\r\n                      required\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <br />\r\n                    <textarea\r\n                      className=\"mypile-input-field pile-description-input-field\"\r\n                      value={pile.description}\r\n                      onChange={(e) => handlePileChanges(e)}\r\n                      id=\"description\"\r\n                      placeholder=\"Short Description\"\r\n                      required\r\n                    ></textarea>\r\n                    <br />\r\n                    <br />\r\n                    <button className=\"btn mypile-btn\">Add</button>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <NotLoggedIn />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddPile;\r\n","import { React, Fragment, useState } from \"react\";\r\nimport \"./../App.css\";\r\nimport HomeLink from \"./links/HomeLink\";\r\nimport axios from \"axios\";\r\n// import Select from \"react-select\"\r\nimport { BeatLoader } from \"react-spinners\";\r\n// import { css } from \"@emotion/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./../css/Signup.css\";\r\n\r\nconst SignUp = () => {\r\n  const [registerInfo, setRegisterInfo] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    gender: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n  // state for the gender options\r\n  const [gender, setGender] = useState(\"\");\r\n  const [verificationCode, setVerificationCode] = useState(0);\r\n  // function to handle the gender changes\r\n  const handleGenderChange = (e) => {\r\n    const selectGender = e.target.value;\r\n    setGender(selectGender);\r\n    console.log(gender);\r\n  };\r\n  // upon successful regsitration\r\n  const [successfullyRegisteredMsg, setSuccessfullyRegisteredMsg] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  // state to display successfuly regsitered user\r\n  const [displaySuccessfullyRegistered, setDisplaySuccessfullyRegistered] =\r\n    useState(false);\r\n  // submit the form\r\n  // checking the email to ensure that is unique\r\n  const [checkEmailStatusError, setCheckEmailStatusError] = useState(\"\");\r\n  // display this a user first visits the signup page\r\n  const [firsDisplayMessage, setFirstDisplayMessage] = useState(\r\n    \"Create an account from here\"\r\n  );\r\n  const [displayEmailOrPasswordError, setDisplayEmailOrPasswordError] =\r\n    useState(false);\r\n  // check password\r\n  const [checkPasswordMatch, setCheckPasswordMatch] = useState(\"\");\r\n  // hiding the registration form\r\n  const [hideRegistrationForm, setHideRegstrationForm] = useState(false);\r\n  // show the beat loader\r\n  const [displayBeatLoader, setDisplayBeatLoader] = useState(false);\r\n  const [catchError, setCatchError] = useState(\"\");\r\n  const [isVerifiedEmail, setIsVerifiedEmail] = useState(false);\r\n\r\n  const submitRegisterInfo = async (e) => {\r\n    e.preventDefault();\r\n    // scroll to the top upon submitting\r\n    window.scrollTo(0, 0);\r\n    // show the beat loader\r\n    setDisplayBeatLoader(true);\r\n    try {\r\n      const response = await axios.post(\r\n        // \"https://stockpile-backend.herokuapp.com/register\",\r\n        \"http://localhost:5000/register\",\r\n        {\r\n          firstname: registerInfo.firstname,\r\n          lastname: registerInfo.lastname,\r\n          email: registerInfo.email,\r\n          gender: registerInfo.gender, // some changes made here\r\n          password: registerInfo.password,\r\n          confirm_password: registerInfo.confirm_password,\r\n          is_verified_email: isVerifiedEmail,\r\n        }\r\n      );\r\n      console.log(response);\r\n      if (response.status === 200) {\r\n        // successful request stop the beat loader\r\n        setDisplayBeatLoader(false);\r\n        if (response.data.email === registerInfo.email) {\r\n          // frontend email === backend email\r\n          // make input fields empty\r\n          setRegisterInfo({\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            gender: \"\",\r\n            password: \"\",\r\n            confirm_password: \"\",\r\n          });\r\n          // Alert the sucesssfully registered user informatiion(email and password)\r\n          setSuccessfullyRegisteredMsg({\r\n            email: registerInfo.email,\r\n            password: registerInfo.password,\r\n          });\r\n          //alert the successfully registered\r\n          setDisplaySuccessfullyRegistered(true);\r\n\r\n          // make the states for checking the errors empty\r\n          setCheckEmailStatusError(\"\");\r\n          setCheckPasswordMatch(\"\");\r\n\r\n          //hide the registration form\r\n          setHideRegstrationForm(true);\r\n        } else {\r\n          // go back to the top after when displayin ght error\r\n          // window.scrollTo(0, 0);\r\n          // Email check after a successful request\r\n          setCheckEmailStatusError(response.data.msgEmail);\r\n          // Password check after a successful request\r\n          setCheckPasswordMatch(response.data.msgPassword);\r\n          // display when there is an error\r\n          setDisplayEmailOrPasswordError(true);\r\n        }\r\n      } else {\r\n        // check the err if no success\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      setCatchError(\"sorry, something went wrong!\");\r\n      setDisplayBeatLoader(false);\r\n    }\r\n  };\r\n\r\n  // Handle the changes\r\n  const handleChange = (e) => {\r\n    const newRegisterInfo = { ...registerInfo };\r\n    newRegisterInfo[e.target.id] = e.target.value; // research for understanding purposes\r\n    setRegisterInfo(newRegisterInfo);\r\n    console.log(newRegisterInfo);\r\n  };\r\n  //function to verify the user code\r\n  const sendVerificationCode = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/verify-user-email\",\r\n        { verificationCode: verificationCode }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"signup-page-wrapper\">\r\n        <div className=\"signup-header-wrapper\">\r\n          <div className=\"signup-home-link\">\r\n            <HomeLink />\r\n          </div>\r\n        </div>\r\n        {/* { displaying the user email and password required after sucessful registering} */}\r\n        <div className=\"display-register-info-wrapper-1\">\r\n          {displaySuccessfullyRegistered ? (\r\n            <div className=\"display-register-info-wrapper-2\">\r\n              {/* Tell the user that we have sent a verification link to his email of registration */}\r\n              <p>\r\n                A confirmation link has been sent to{\" \"}\r\n                {successfullyRegisteredMsg.email}\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          {displayEmailOrPasswordError ? (\r\n            <div className=\"registration-errors\">\r\n              <p className=\"check-email-status-error\">\r\n                {\" \"}\r\n                {checkEmailStatusError}\r\n              </p>\r\n              <p className=\"check-password-match\">{checkPasswordMatch}</p>\r\n            </div>\r\n          ) : (\r\n            // To be removed because it is unnecessary\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <p style={{ color: \"lightyellow\" }}>{catchError}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"beat-loader-component-signup\">\r\n          {displayBeatLoader ? <BeatLoader color=\"lightseagreen\" /> : null}\r\n        </div>\r\n        {/* hiding the registraton form after successful registration */}\r\n\r\n        {hideRegistrationForm ? null : (\r\n          <div className=\"registration-form\">\r\n            <form onSubmit={(e) => submitRegisterInfo(e)}>\r\n              <h3 className=\"registration-form-heading\">Create An Account</h3>\r\n              <label>Firstname:</label>\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                id=\"firstname\"\r\n                className=\"signup-input-field\"\r\n                value={registerInfo.firstname}\r\n                onChange={(e) => handleChange(e)}\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <label>Lastname:</label>\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                className=\"signup-input-field\"\r\n                id=\"lastname\"\r\n                value={registerInfo.lastname}\r\n                onChange={(e) => handleChange(e)}\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              {/*display email exists */}\r\n              <label>Email Address:</label>\r\n              <br />\r\n              <input\r\n                type=\"email\"\r\n                className=\"signup-input-field\"\r\n                id=\"email\"\r\n                value={registerInfo.email}\r\n                onChange={(e) => handleChange(e)}\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <label>Gender:</label>\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                id=\"gender\"\r\n                className=\"signup-input-field\"\r\n                value={registerInfo.gender}\r\n                onChange={(e) => handleChange(e)}\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              {/* display password don't match */}\r\n              <label>Password:</label>\r\n              <br />\r\n              <input\r\n                type=\"password\"\r\n                className=\"signup-input-field\"\r\n                id=\"password\"\r\n                value={registerInfo.password}\r\n                onChange={(e) => handleChange(e)}\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <label>Confirm Password:</label>\r\n              <br />\r\n              <input\r\n                type=\"password\"\r\n                className=\"signup-input-field\"\r\n                id=\"confirm_password\"\r\n                value={registerInfo.confirm_password}\r\n                onChange={(e) => handleChange(e)}\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <button className=\"signup-btn\">Create</button>\r\n            </form>\r\n            <p>\r\n              Do you already have an account?{\" \"}\r\n              <Link to=\"/login\" className=\"link\">\r\n                login\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default SignUp;\r\n","import React, { Fragment, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeLink from \"./links/HomeLink\";\r\nimport axios from \"axios\";\r\n// import {Redirect} from 'react-router-dom'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TokenContext } from \"./context/TokenContext\";\r\nimport { FadeLoader } from \"react-spinners\";\r\nimport { css } from \"@emotion/react\";\r\nimport \"./../css/Login.css\";\r\n\r\nconst Login = (isLoggedIn) => {\r\n  const [userLoginInfo, setUserLoginInfo] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [displayLoginErrors, SetDisplayLoginErrors] = useState(\"\");\r\n  const [displayLoginSuccess, SetDisplayLoginSuccess] = useState(\"\");\r\n  const [hideLoginForm, setHideLoginForm] = useState(false);\r\n  const [displayFadeLoader, setDisplayFadeLoader] = useState(false);\r\n  const [catchError, setCatchError] = useState(\"\");\r\n  const [isloggedIn, setIsLoggedIn] = useState(false);\r\n  // const { globalUserId, setGlobalUserId } = useContext(TokenContext);\r\n\r\n  let history = useHistory();\r\n  // const laoder\r\n  const LoaderCSS = css`\r\n    margin-top: 40px;\r\n    margin-bottom: 10px;\r\n    color: red;\r\n  `;\r\n  // submit the user login details\r\n  const submitLoginInfo = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // on submitting display the beatloader\r\n      setDisplayFadeLoader(true);\r\n      //hide the error and success messages\r\n      SetDisplayLoginSuccess(\"\");\r\n      SetDisplayLoginErrors(\"\");\r\n      const response = await axios.post(\r\n        // \"https://stockpile-backend.herokuapp.com/login\",\r\n        \"http://localhost:5000/login\",\r\n        {\r\n          email: userLoginInfo.email,\r\n          password: userLoginInfo.password,\r\n        }\r\n      );\r\n      console.log(response);\r\n      // if the login is a success then make the input fields empty\r\n      if (response.status === 200) {\r\n        // stop the loading indicator\r\n        setDisplayFadeLoader(false);\r\n        // alert the user input anything geoes wrong\r\n        SetDisplayLoginErrors(response.data.msg);\r\n        SetDisplayLoginSuccess(response.data.success);\r\n        setCatchError(\"\"); // should not display\r\n        if (response.data.success === \"You have successfully logged in\") {\r\n          // hide login form\r\n          setHideLoginForm(true);\r\n\r\n          setUserLoginInfo({ email: \"\", password: \"\" }); //makes the input fields empty\r\n          setIsLoggedIn(true);\r\n          //store the state in the local storage\r\n          localStorage.setItem(\"isLoggedIn\", \"isLoggedIn\");\r\n          // set the token to the local storage\r\n          localStorage.setItem(\"accessToken\", response.data.accessToken);\r\n          // store the userid in the local storage\r\n          localStorage.setItem(\"userId\", response.data.userId);\r\n          history.push(\"/addpile\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setCatchError(\"Sorry, something went wrong!\");\r\n      setDisplayFadeLoader(false);\r\n    }\r\n  };\r\n  // pass the token from the accessToken to the context hook\r\n  //  setStoreAccessTokenGlobally(accessToken)\r\n  // Handle the changes\r\n  const handleLoginInfo = (e) => {\r\n    const checkLoginInfo = { ...userLoginInfo };\r\n    checkLoginInfo[e.target.id] = e.target.value; // some RS\r\n    setUserLoginInfo(checkLoginInfo);\r\n    console.log(checkLoginInfo);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"login-page-wrapper\">\r\n        <div className=\"login-header-wrapper\">\r\n          <div className=\"login-home-link\">\r\n            <HomeLink />\r\n          </div>\r\n        </div>\r\n        <div className=\"login-form-wrapper\">\r\n          <form onSubmit={(e) => submitLoginInfo(e)} className=\"login-form\">\r\n            <div className=\"login-form-heading\">\r\n              <h3>Log Into Your Account</h3>\r\n            </div>\r\n            <div className=\"display-login-status\">\r\n              <p className=\"display-login-errors\">{displayLoginErrors}</p>\r\n              <p className=\"display-login-success\">{displayLoginSuccess}</p>\r\n            </div>\r\n            <div className=\"login-catch-error\" style={{ textAlign: \"center\" }}>\r\n              <p style={{ color: \"lightyellow\" }}>{catchError}</p>\r\n            </div>\r\n            <div className=\"beat-loader-component-wrapper\">\r\n              {displayFadeLoader ? (\r\n                <div className=\"beat-loader-component-wrapper\">\r\n                  <FadeLoader\r\n                    className=\"beat-loader\"\r\n                    color=\"hsl(180, 100%, 30%)\"\r\n                    size={5}\r\n                  />\r\n                  <h5 className=\"authenticate-msg\">Authenticating...</h5>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {hideLoginForm ? (\r\n              <div>\r\n                <p>Login form hiding</p>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <label>Email Address:</label>\r\n                <br />\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"login-input-field\"\r\n                  id=\"email\"\r\n                  value={userLoginInfo.email}\r\n                  onChange={(e) => handleLoginInfo(e)}\r\n                  required\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Password:</label>\r\n                <br />\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"login-input-field\"\r\n                  id=\"password\"\r\n                  value={userLoginInfo.password}\r\n                  onChange={(e) => handleLoginInfo(e)}\r\n                  required\r\n                />\r\n              </div>\r\n            )}\r\n            <br />\r\n            <br />\r\n            <button type=\"submit\" className=\"login-btn\">\r\n              Login\r\n            </button>\r\n          </form>\r\n          {/* <p>{storeAccessTokenGloabally}</p> for trail purposes */}\r\n          <p>\r\n            Is this your first time here?{\" \"}\r\n            <Link to=\"/signup\" className=\"link\">\r\n              signup\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NotLoggedIn from \"./NotLoggedIn\";\r\nimport \"./../css/Logout.css\";\r\n\r\nconst Logout = () => {\r\n  let history = useHistory();\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const logoutUser = async () => {\r\n    await localStorage.removeItem(\"accessToken\");\r\n    await localStorage.removeItem(\"userId\");\r\n    await localStorage.removeItem(\"isLoggedIn\");\r\n    history.push(\"/login\");\r\n  };\r\n  // logout user on loading the component\r\n  useEffect(() => {\r\n    // first check whether the user is logged in\r\n    if (localStorage.getItem(\"isLoggedIn\") === \"isLoggedIn\") {\r\n      // logout the user\r\n      logoutUser();\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div className=\"logout-wrapper\">\r\n          <h4 className=\"logout-message\">Bye Bye See You Later !</h4>\r\n        </div>\r\n      ) : (\r\n        <NotLoggedIn />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./../../App.css\";\r\n\r\nconst AddPileLink = () => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <NavLink to=\"/addpile\" className=\"navigation-link\">\r\n          AddPile\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPileLink;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n// import { ClipLoader, PropagateLoader } from \"react-spinners\";\r\nimport { X } from \"react-bootstrap-icons\";\r\nimport \"./../css/EditPileDescription.css\";\r\n\r\n// More features to be added here\r\n// Look for appropriate react spinners for react modal\r\n\r\nconst EditPileDescription = ({ pile }) => {\r\n  const [pileDescription, setPileDescription] = useState([pile.description]);\r\n  const [displayClipLoader, setDisplayClipLoader] = useState(false);\r\n\r\n  // console.log(pileTitle);\r\n  let subtitle;\r\n  const customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      color: \"black\",\r\n      width: \"60%\",\r\n    },\r\n  };\r\n  const [isModalOpen, setIsOpenModal] = useState(false);\r\n  // open modal function\r\n  const openModal = () => {\r\n    setIsOpenModal(true);\r\n  };\r\n  // close modal function\r\n  const closeModal = () => {\r\n    setIsOpenModal(false);\r\n  };\r\n  // On opening the modal function\r\n  const afterOpenModal = () => {\r\n    // subtitle.style.color = \"black\";\r\n  };\r\n\r\n  const tokenFromLocalStorage = localStorage.getItem(\"accessToken\");\r\n  const axiosApi = axios.create({\r\n    // baseURL: \"https://stockpile-backend.herokuapp.com/api\",\r\n    baseURL: \"http://localhost:5000/api\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + tokenFromLocalStorage,\r\n    },\r\n  });\r\n  // function to update data in the database\r\n  const updatePileDescription = async (e) => {\r\n    e.preventDefault();\r\n    // start the spinner here\r\n    setDisplayClipLoader(true);\r\n    try {\r\n      const response = await axiosApi.put(\r\n        `/edit-pile-description/${pile.pile_id}`,\r\n        {\r\n          description: pileDescription,\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        // And end the close modal\r\n        closeModal();\r\n      } else {\r\n        // when some thing goes wrong\r\n      }\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // binding the modal to the app\r\n  //   Modal.setAppElement(\"#pile-description-id\");\r\n  Modal.setAppElement(document.getElementById(\"pile-description-id\")); // some bugs here\r\n  return (\r\n    <div>\r\n      <button className=\"edit-button edit-button-1\" onClick={openModal}>\r\n        edit\r\n      </button>\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Edit Pile\"\r\n      >\r\n        <form className=\"edit-form\">\r\n          <h4>Edit pile Description</h4>\r\n          <div onClick={closeModal} className=\"close-modal\">\r\n            <X size={30} />\r\n          </div>\r\n          <textarea\r\n            className=\"textarea\"\r\n            type=\"text\"\r\n            onChange={(e) => setPileDescription(e.target.value)}\r\n            value={pileDescription}\r\n          />\r\n          <button\r\n            className=\"edit-button edit-button-2\"\r\n            onClick={updatePileDescription}\r\n          >\r\n            Edit\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPileDescription;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n// import { ClipLoader, PropagateLoader } from \"react-spinners\";\r\nimport { X } from \"react-bootstrap-icons\";\r\nimport \"./../css/EditPileTitle.css\";\r\n\r\n// More features to be added here\r\n// Look for appropriate react spinners for react modal\r\n\r\nconst EditPileTitle = ({ pile }) => {\r\n  const [pileTitle, setPileTitle] = useState([pile.title]);\r\n  // const [displayClipLoader, setDisplayClipLoader] = useState(false);\r\n\r\n  // console.log(pileTitle);\r\n  let subtitle;\r\n  const customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      color: \"black\",\r\n      width: \"50%\",\r\n    },\r\n  };\r\n  const [isModalOpen, setIsOpenModal] = useState(false);\r\n  // open modal function\r\n  const openModal = () => {\r\n    setIsOpenModal(true);\r\n  };\r\n  // close modal function\r\n  const closeModal = () => {\r\n    setIsOpenModal(false);\r\n  };\r\n  // On opening the modal function\r\n  const afterOpenModal = () => {\r\n    // subtitle.style.color = \"black\";\r\n  };\r\n\r\n  const tokenFromLocalStorage = localStorage.getItem(\"accessToken\");\r\n  const axiosApi = axios.create({\r\n    // baseURL: \"https://stockpile-backend.herokuapp.com/api\",\r\n    baseURL: \"http://localhost:5000/api\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + tokenFromLocalStorage,\r\n    },\r\n  });\r\n  // function to update data in the database\r\n  const updatePileTitle = async (e) => {\r\n    e.preventDefault();\r\n    // start the spinner here\r\n    // setDisplayClipLoader(true);\r\n    try {\r\n      console.log(pile.pile_id);\r\n      const response = await axiosApi.put(`/edit-pile-title/${pile.pile_id}`, {\r\n        title: pileTitle,\r\n      });\r\n      if (response.status === 200) {\r\n        // And end the close modal\r\n        closeModal();\r\n        // also refresh automatically the whole page for a user to visualize the changes\r\n      } else {\r\n        // when some thing goes wrong\r\n      }\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // binding the modal to the app\r\n  //   Modal.setAppElement(\"#pile-title-id\");\r\n  Modal.setAppElement(document.getElementById(\"pile-title-id\")); // some bugs here\r\n  return (\r\n    <div>\r\n      <button className=\"edit-button edit-button-1\" onClick={openModal}>\r\n        edit\r\n      </button>\r\n      <div className=\"modal-wrapper\">\r\n        <Modal\r\n          isOpen={isModalOpen}\r\n          onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Edit Pile Title\"\r\n        >\r\n          <form className=\"edit-form\">\r\n            <h4>Edit Pile Title</h4>\r\n            <div onClick={closeModal} className=\"close-modal\">\r\n              <X size={30} />\r\n            </div>\r\n            <textarea\r\n              className=\"textarea\"\r\n              type=\"text\"\r\n              onChange={(e) => setPileTitle(e.target.value)}\r\n              value={pileTitle}\r\n            />\r\n            <button\r\n              className=\"edit-button edit-button-2\"\r\n              onClick={updatePileTitle}\r\n            >\r\n              Edit\r\n            </button>\r\n          </form>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPileTitle;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"react-modal\";\r\nimport { X } from \"react-bootstrap-icons\";\r\nimport \"./../css/DeletePile.css\";\r\n\r\nconst DeletePile = ({ pile }) => {\r\n  // the modal state\r\n  const [isModalOpen, setIsOpenModal] = useState(false);\r\n  let subtitle;\r\n  // styles\r\n  const customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      color: \"black\",\r\n      width: \"40%\",\r\n    },\r\n  };\r\n  // open modal\r\n  const openModal = () => {\r\n    setIsOpenModal(true);\r\n  };\r\n  // close modal\r\n  const closeModal = () => {\r\n    setIsOpenModal(false);\r\n  };\r\n  // onAfterOpen modal\r\n  const afterOpenModal = () => {\r\n    // subtitle.style.color = \"green\";\r\n  };\r\n  // the modal element\r\n  Modal.setAppElement(document.getElementsByClassName(\"user-pile\"));\r\n\r\n  const [pileId, setPileId] = useState(pile.pile_id);\r\n\r\n  const tokenFromLocalStorage = localStorage.getItem(\"accessToken\");\r\n  const axiosApi = axios.create({\r\n    // baseURL: \"https://stockpile-backend.herokuapp.com/api\",\r\n    baseURL: \"http://localhost:5000/api\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + tokenFromLocalStorage,\r\n    },\r\n  });\r\n\r\n  // function to delete the pile\r\n  const deletePile = async () => {\r\n    // e.preventDefault();\r\n    try {\r\n      // console.log(renderAllPile.pile_id);\r\n      console.log(pileId); // to test whether it is working properly\r\n      const response = await axiosApi.delete(`/delete-pile/${pileId}`);\r\n      if (response.status === 200) {\r\n        // And end the close modal\r\n        closeModal();\r\n        // also refresh automatically the whole page for a user to visualize the changes\r\n      } else {\r\n        // when some thing goes wrong\r\n      }\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n      // some state to capture error and alert the user when there is a problem on the server\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"delete-button delete-button-1\" onClick={openModal}>\r\n        Delete\r\n      </button>\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Delete Pile\"\r\n      >\r\n        <div className=\"modal-wrapper\">\r\n          <h4>This will be deleted permanently</h4>\r\n          <div className=\"close-modal\" onClick={closeModal}>\r\n            <X size={30} />\r\n          </div>\r\n          <button\r\n            className=\"delete-button delete-button-2\"\r\n            onClick={deletePile}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeletePile;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { PropagateLoader } from \"react-spinners\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport HomeLink from \"./links/HomeLink\";\r\nimport AddPileLink from \"./links/AddPileLink\";\r\nimport LogoutLink from \"./links/LogoutLink\";\r\nimport NotLoggedIn from \"./NotLoggedIn\";\r\nimport EditPileDescription from \"./EditPileDescription\";\r\nimport EditPileTitle from \"./EditPileTitle\";\r\nimport DeletePile from \"./DeletePile\";\r\nimport \"./../css/Viewpile.css\";\r\n\r\nconst ViewMypile = () => {\r\n  const [renderAllPile, setRenderAllPile] = useState([]);\r\n  const [displayWhenNoToken, setDisplayWhenNoToken] = useState(false);\r\n  const [displayCatchError, setDisplayCatchError] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [displayPropagateLoader, setDisplayPropagateLoader] = useState(false);\r\n  const [displayTable, setDisplayTable] = useState(false);\r\n  const tokenFromLocalStorage = localStorage.getItem(\"accessToken\");\r\n\r\n  const axiosApi = axios.create({\r\n    // baseURL: \"https://stockpile-backend.herokuapp.com/api\",\r\n    baseURL: \"http://localhost:5000/api\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + tokenFromLocalStorage,\r\n    },\r\n  });\r\n  const getPile = async () => {\r\n    try {\r\n      setDisplayPropagateLoader(true);\r\n      const getMyPile = await axiosApi.get(\r\n        `/getpile/${localStorage.getItem(\"userId\")}`\r\n      );\r\n      if (!tokenFromLocalStorage) {\r\n        setDisplayWhenNoToken(true);\r\n      } else {\r\n        setDisplayPropagateLoader(false);\r\n        console.log(getMyPile); // to be removed\r\n        const arrayPile = getMyPile.data.rows;\r\n        console.log(arrayPile);\r\n        setRenderAllPile(arrayPile);\r\n        setDisplayCatchError(false);\r\n        window.scrollTo(0, 0); // scrolling to the top\r\n        if (getMyPile.status === 200) {\r\n          setDisplayTable(true);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      window.scrollTo(0, 0); // scrolling to the top\r\n      setDisplayCatchError(true);\r\n      setDisplayPropagateLoader(false);\r\n    }\r\n  };\r\n\r\n  // show pile on rendering and after every update\r\n  useEffect(() => {\r\n    let isActive = true;\r\n    if (isActive) {\r\n      if (localStorage.getItem(\"isLoggedIn\") === \"isLoggedIn\") {\r\n        getPile();\r\n        setIsLoggedIn(true);\r\n      }\r\n    }\r\n    return (isActive = false);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div className=\"view-pile-wrapper\">\r\n          <div className=\"viewpile-header-wrapper\">\r\n            <div className=\"viewpile-home-link header-link\">\r\n              <HomeLink />\r\n            </div>\r\n            <div className=\"viewpile-mypile-link header-link\">\r\n              <AddPileLink />\r\n            </div>\r\n            <div className=\"viewpile-logout-link header-link\">\r\n              <LogoutLink />\r\n            </div>\r\n          </div>\r\n          {/* display an error to user wen backend has the problem */}\r\n          {displayCatchError ? (\r\n            <div className=\"view-pile-error-msg\">\r\n              <p>Sorry, something went wrong!</p>\r\n            </div>\r\n          ) : null}\r\n          {displayWhenNoToken ? (\r\n            <div className=\"view-pile-when-not-loggedin\">\r\n              <p>You have no token!</p>\r\n              <p>\r\n                Is this your first time here?\r\n                <Link to=\"/signup\" className=\"view-link\">\r\n                  {\" \"}\r\n                  Create Account\r\n                </Link>\r\n              </p>\r\n              <p>\r\n                Do you already have an Account?{\" \"}\r\n                <Link to=\"/login\" className=\"view-link\">\r\n                  Login\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            // display the react spinner\r\n            <div className=\"pile-wrapper\">\r\n              {displayPropagateLoader ? (\r\n                <div className=\"propagate-loader-wrapper\">\r\n                  <PropagateLoader size={12} color=\"hsl(180, 100%, 30%)\" />\r\n                  <h5>Loading...</h5>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n          {displayTable ? (\r\n            <table>\r\n              <tr>\r\n                {/* <th>Date</th> */}\r\n                {/* <th>Time</th> */}\r\n                <th>Title</th>\r\n                <th>Description</th>\r\n                {/* <th>Edit Title</th> */}\r\n                {/* <th>Edit Description</th> */}\r\n                <th>Delete</th>\r\n              </tr>\r\n              {/* map method here */}\r\n              {renderAllPile.map((pile) => {\r\n                return (\r\n                  <tr key={pile.pile_id}>\r\n                    {/* <td>{pile.date_of_add}</td> */}\r\n                    {/* <td>{pile.time_of_add}</td> */}\r\n                    <td id=\"pile-title-id\">\r\n                      {pile.title} {<EditPileTitle pile={pile} />}\r\n                    </td>\r\n                    <td id=\"pile-description-id\">\r\n                      {pile.description} {<EditPileDescription pile={pile} />}\r\n                    </td>\r\n                    <td>{<DeletePile pile={pile} />}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </table>\r\n          ) : null}\r\n        </div>\r\n      ) : (\r\n        <NotLoggedIn />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewMypile;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport NotLoggedIn from \"./NotLoggedIn\";\r\nimport \"./../App.css\";\r\nconst AddSecretePile = () => {\r\n  const [secretePile, setSecretePile] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  // const [getMySecerete, setGetMySecrete] = useState([]);\r\n  const [catchError, setCatchError] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  // get the token from the local storage\r\n  const tokenFromLocalStorage = localStorage.getItem(\"accessToken\");\r\n  //request along the token\r\n  //https://stockpile-backend.herokuapp.com/\r\n  const axiosApi = axios.create({\r\n    baseURL: \"http://localhost:5000/api\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + tokenFromLocalStorage,\r\n    },\r\n  });\r\n  // handle the changes\r\n  const handleChange = (e) => {\r\n    const secretePileInfo = { ...secretePile };\r\n    secretePileInfo[e.target.id] = e.target.value;\r\n    setSecretePile(secretePileInfo);\r\n    console.log(secretePileInfo);\r\n  };\r\n  // submit the secretes\r\n  const submitSecretePileInfo = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axiosApi.post(\r\n        `/secretepile/${localStorage.getItem(\"userId\")}`,\r\n        {\r\n          secrete_title: secretePile.title,\r\n          secrete_description: secretePile.description,\r\n        }\r\n      );\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setCatchError(\" sorry, some thing went wrong!\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"isLoggedIn\") === \"isLoggedIn\") {\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {isLoggedIn ? (\r\n        <div className=\"secretes-page-wrapper\">\r\n          <div className=\"welcome-secrete-content\">\r\n            <p>\r\n              Keep your seceretes here and be only to only one to know them in\r\n              the world !{\" \"}\r\n            </p>\r\n          </div>\r\n          <div className=\"secrete-form-wrapper\">\r\n            <form onSubmit={(e) => submitSecretePileInfo(e)}>\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"title\"\r\n                className=\"secrete-title\"\r\n                id=\"title\"\r\n                value={secretePile.title}\r\n                onChange={(e) => handleChange(e)}\r\n                required\r\n              />\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"description\"\r\n                className=\"secrete-description\"\r\n                id=\"description\"\r\n                value={secretePile.description}\r\n                onChange={(e) => handleChange(e)}\r\n                required\r\n              />\r\n              <button className=\"secrete-btn\">submit</button>\r\n            </form>\r\n          </div>\r\n          <div className=\"catch-error\" style={{ color: \"red\" }}>\r\n            <p>{catchError}</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <NotLoggedIn />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddSecretePile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport NotLoggedIn from \"./NotLoggedIn\";\r\n\r\nconst ViewSecretePile = () => {\r\n  const [secretePile, setSecretePile] = useState([]);\r\n  const [catchError, setCatchError] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const tokenFromLocalStorage = localStorage.getItem(\"accessToken\");\r\n\r\n  //https://stockpile-backend.herokuapp.com/\r\n  const axiosApi = axios.create({\r\n    baseURL: \"http://localhost:5000/api\",\r\n    // baseURL: \"https://stockpile-backend.herokuapp.com/api\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + tokenFromLocalStorage,\r\n    },\r\n  });\r\n\r\n  //the get secretes\r\n  const getSecretePile = async () => {\r\n    try {\r\n      const response = await axiosApi.get(\r\n        `/getsecretepile/${localStorage.getItem(\"userId\")}`\r\n      );\r\n      const renderSecretePile = response.data;\r\n      setSecretePile(renderSecretePile);\r\n      console.log(response);\r\n      console.log(renderSecretePile);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setCatchError(\"sorry, some thing went wrong!\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let isActive = true;\r\n    if (isActive) {\r\n      if (localStorage.getItem(\"isLoggedIn\") === \"isLoggedIn\") {\r\n        setIsLoggedIn(true);\r\n        getSecretePile();\r\n      }\r\n    }\r\n    return (isActive = false);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div className=\"secrete-pile-wrapper\">\r\n          <div className=\"catch-error-in-view-secrete-pile\">\r\n            <p>{catchError}</p>\r\n          </div>\r\n          <div className=\"get-secretes-wrapper\">\r\n            <button onClick={getSecretePile}>See my secretes</button>\r\n            {/* <p>{getMySecerete}</p> */}\r\n          </div>\r\n          {/* check this error wen back to coding again */}\r\n          <div>\r\n            {secretePile.map((pile) => {\r\n              <div key={pile.secrete_id}>\r\n                <div className=\"secrete-title\">{pile.secrete_title}</div>\r\n                <div className=\"secrete-description\">\r\n                  {pile.secrete_description}\r\n                </div>\r\n              </div>;\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <NotLoggedIn />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewSecretePile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport \"./../css/VerifyEmail.css\";\r\nimport axios from \"axios\";\r\nimport { FadeLoader } from \"react-spinners\";\r\n\r\nconst VerifyEmail = () => {\r\n  // get the verification from the url using useParams hook\r\n  const { verificationCode, userId } = useParams();\r\n  let history = useHistory();\r\n  //   send the code to the backend for verification\r\n  const [showFadeLoader, setShowFadeLoader] = useState(false);\r\n  const [showSuccessVerificationMsg, setShowSuccessVerificationMsg] =\r\n    useState(false);\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n  const verifyCode = async () => {\r\n    try {\r\n      setShowFadeLoader(true);\r\n      const response = await axios.post(\r\n        ` http://localhost:5000/verify-user-email/${userId}`,\r\n        {\r\n          verificationCode: parseInt(verificationCode),\r\n        }\r\n      );\r\n      setSuccessMsg(response.data.verificationMsg);\r\n      console.log(response);\r\n      //   when successfully verify the user should be redirected to the home page\r\n      setTimeout(() => {\r\n        if (response.status === 200) {\r\n          setShowFadeLoader(false);\r\n          setShowSuccessVerificationMsg(true);\r\n          // history.push(\"/login\");\r\n        } else {\r\n          //   an error occurred during email verification\r\n        }\r\n      }, 5000);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setShowFadeLoader(false);\r\n    }\r\n  };\r\n  // useEffect here\r\n  useEffect(() => {\r\n    //   verify code function should run on mounting of this component\r\n    verifyCode();\r\n  }, []);\r\n  return (\r\n    <div className=\"verify-email-wrapper\">\r\n      <h2>your code is {verificationCode}</h2>\r\n      <h2>your user id is {userId}</h2>\r\n      {/* spinner here  */}\r\n      {showFadeLoader ? (\r\n        <div>\r\n          <FadeLoader color=\"lightseagreen\" />\r\n          <h5>verifying your account</h5>\r\n        </div>\r\n      ) : null}\r\n      {showSuccessVerificationMsg ? (\r\n        <div>\r\n          <p>{successMsg}</p>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"./../App.css\";\r\n\r\nconst TestClient = () => {\r\n  // some code here\r\n  const allOptions = [\r\n    { id: 2, gender: \"female\" },\r\n    { id: 1, gender: \"male\" },\r\n  ];\r\n  //some state here\r\n  const [genderOption, setGenderOption] = useState(allOptions.gender);\r\n  //The fucntion to handle the state\r\n  const handleGenderChange = (e) => {\r\n    setGenderOption(e.gender);\r\n  };\r\n  // look for way to store the data in the database\r\n  //   so some function to send the data in the database\r\n  //   And the function should be here\r\n  return (\r\n    <div>\r\n      <h3>This is for testing purposes</h3>\r\n      {/* <select> */}\r\n      {/* <option value=\"gender\">Your gender</option>\r\n        <option value=\"female\">Female</option>\r\n        <option value=\"male\">Male</option> */}\r\n      {/* {options.map(({ id, gender }) => {\r\n          <option key={id}>{gender}</option>;\r\n        })}\r\n      </select> */}\r\n\r\n      {/* This is another selec6t about the gender options */}\r\n      <Select\r\n        options={allOptions}\r\n        onChange={handleGenderChange}\r\n        styles={{ color: \"black\", backgroundColor: \"red\", width: \"20%\" }}\r\n      />\r\n      <h3>{genderOption}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestClient;\r\n","import react from \"react\";\r\nimport \"./../App.css\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Page Not Found !</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./components/Home\";\r\nimport About from \"./components/About\";\r\nimport AddPile from \"./components/AddPile\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Login from \"./components/Login\";\r\nimport Logout from \"./components/Logout\";\r\nimport ViewMypile from \"./components/ViewMypile\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport AddSecretePile from \"./components/AddSecretePile\";\r\nimport ViewSecretePile from \"./components/ViewSecretePile\";\r\nimport VerifyEmail from \"./components/VerifyEmail\";\r\nimport TestClient from \"./components/TestClient\"; // This is for testing purposes na should be removed\r\nimport { TokenContext } from \"./components/context/TokenContext\";\r\nimport NotFound from \"./components/NotFound\";\r\n\r\nconst App = () => {\r\n  const [globalUserId, setGlobalUserId] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <HashRouter>\r\n        {/* scroll to the top copmponent here please */}\r\n        <ScrollToTop />\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          {/* <TokenContext.Provider value={{ globalUserId, setGlobalUserId }}> */}\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/addpile\" component={AddPile} />\r\n          <Route path=\"/viewmypile\" component={ViewMypile} />\r\n          <Route path=\"/addsecretepile\" component={AddSecretePile} />\r\n          <Route path=\"/viewsecretepile\" component={ViewSecretePile} />\r\n          <Route\r\n            path=\"/verify-user-email/:userId/:verificationCode\"\r\n            component={VerifyEmail}\r\n          />\r\n          <Route path=\"/testclient\" component={TestClient} />\r\n          <Route component={NotFound} /> {/*more research for this compoent*/}\r\n          {/* </TokenContext.Provider> */}\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./App.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}